import kotlin.Boolean;
import kotlin.Int;

CREATE TABLE IF NOT EXISTS category (
    id INTEGER PRIMARY KEY,
    displayableName TEXT NOT NULL,
    queryableName TEXT NOT NULL,
    displayableDescription TEXT NOT NULL,
    queryableDescription TEXT NOT NULL,
    needed INTEGER AS Boolean NOT NULL,
    deleted TEXT, --TODO
    picked INTEGER AS Boolean NOT NULL,
    position INTEGER NOT NULL
);

insert:
INSERT OR REPLACE INTO category VALUES ?;

create:
INSERT INTO category (
    displayableName,
    queryableName,
    displayableDescription,
    queryableDescription,
    needed,
    deleted,
    picked,
    position
) VALUES(
    :displayableName,
    :queryableName,
    :displayableDescription,
    :queryableDescription,
    0,
    NULL,
    0,
    :position
);

byName:
SELECT * FROM category WHERE queryableName = :queryableName;

all:
SELECT * FROM category WHERE deleted IS NULL ORDER BY needed DESC, picked DESC, position ASC;

first:
SELECT * FROM category LIMIT 1;

changeNeeded:
UPDATE category SET needed=:needed WHERE id = :categoryId;

byId:
SELECT * FROM category WHERE id =:id;

filter:
SELECT * FROM category WHERE deleted IS NULL AND queryableName LIKE :queryableName ORDER BY needed DESC, picked DESC;